name: 'CI/CD'

on:
  push:
    branches:
      - main
      - staging
  pull_request:
    branches:
      - main
      - staging
  workflow_dispatch:

jobs:
  build:
    name: 'Test'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - run: echo "NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_ENV
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install deps
        uses: borales/actions-yarn@v4
        with:
          cmd: install --frozen-lockfile

      - name: Build production bundle
        uses: borales/actions-yarn@v4
        with:
          cmd: build

      - name: Typecheck
        uses: borales/actions-yarn@v4
        with:
          cmd: check-types

  semantic-release:
    name: 'Release'
    runs-on: ubuntu-latest
    needs: ['build']
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false
      - run: echo "NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_ENV
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install deps
        uses: borales/actions-yarn@v4
        with:
          cmd: install --frozen-lockfile

      - name: Build production bundle
        uses: borales/actions-yarn@v4
        with:
          cmd: build

      - name: 'Release'
        id: 'release'
        uses: codfish/semantic-release-action@v2.2.0
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
